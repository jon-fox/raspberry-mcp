# discover_model.py
from pydantic import ConfigDict, Field, Dict
from mcp_server.interfaces.tool import BaseToolInput

class DiscoverInput(BaseToolInput):
    model_config = ConfigDict(
        json_schema_extra={
            "examples": [
                {"query": "LG 55UK6300"},
                {"query": "Samsung QN90A"},
            ]
        }
    )

    query: str = Field(..., description="Brand and model", examples=["LG 55UK6300", "Samsung QN90A"])

class Candidate(BaseToolInput):
    model_config = ConfigDict(
        json_schema_extra={
            "examples": [
                {
                    "id": "lg_55uk6300_nec1",
                    "brand": "LG",
                    "model": "55UK6300",
                },
                {
                    "id": "samsung_qn90a_nec",
                    "brand": "Samsung",
                    "model": "QN90A",
                }
            ]
        }
    )

    id: str = Field(..., description="Stable identifier for this code set.", examples=["lg_55uk6300_nec1", "samsung_qn90a_nec"])
    brand: str = Field(..., description="Device brand.", examples=["LG", "Samsung"])
    model: str = Field(..., description="Device model.", examples=["55UK6300", "QN90A"])


class DiscoverOutput(BaseToolInput):
    model_config = ConfigDict(
        json_schema_extra={
            "examples": [
                {
                    "candidates": [
                        {
                            "id": "lg_55uk6300_nec1",
                            "brand": "LG",
                            "model": "55UK6300",
                        },
                        {
                            "id": "samsung_qn90a_nec",
                            "brand": "Samsung",
                            "model": "QN90A",
                        }
                    ]
                }
            ]
        }
    )

    candidates: list[Candidate] = Field(..., description="List of candidate devices matching the query.", examples=[
        {
            "id": "lg_55uk6300_nec1",
            "brand": "LG",
            "model": "55UK6300",
        },
        {
            "id": "samsung_qn90a_nec",
            "brand": "Samsung",
            "model": "QN90A",
        }
    ])
    message: str = Field(..., description="Additional information about the discovery process.", examples=["2 candidates found", "No candidates found"])

class ConfirmInput(BaseToolInput):
    model_config = ConfigDict(
        json_schema_extra={
            "examples": [
                {
                    "id": "lg_55uk6300_nec1",
                },
                {
                    "id": "samsung_qn90a_nec",
                }
            ]
        }
    )

    id: str = Field(..., description="The ID of the device to confirm", examples=["lg_55uk6300_nec1", "samsung_qn90a_nec"])

class ConfirmOutput(BaseToolInput):
    model_config = ConfigDict(
        json_schema_extra={
            "examples": [
                {
                    "success": True,
                    "device_key": "lg_55uk6300_nec1",
                    "message": "Device confirmed"
                },
                {
                    "success": False,
                    "device_key": "samsung_qn90a_nec",
                    "message": "Device not found"
                }
            ]
        }
    )

    success: bool = Field(..., description="Indicates if the confirmation was successful", examples=[True, False])
    device_key: str = Field(..., description="The unique key of the confirmed device", examples=["lg_55uk6300_nec1", "samsung_qn90a_nec"])
    message: str = Field(..., description="Additional information about the confirmation process", examples=["Device confirmed", "Device not found"])
